name: CI

on:
  push:
    branches:
      - master
      - '*-maint'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - '*-maint'

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: pre-commit/action@v3.0.0
  #       env:
  #         RUFF_OUTPUT_FORMAT: github
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - "ubuntu-22.04"
          # - "windows-2022"
          # - "macos-11"
        python-version:
          # - "3.8"
          # - "3.9"
          # - "3.10"
          # - "3.11"
          - "3.12"
          # - "pypy3.10"
    env:
      BABEL_CLDR_NO_DOWNLOAD_PROGRESS: "1"
      BABEL_CLDR_QUIET: "1"
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: cldr
        key: cldr-${{ hashFiles('scripts/*cldr*') }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
        cache: "pip"
        cache-dependency-path: "**/setup.py"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install 'tox~=4.0' 'tox-gh-actions~=3.0'
    - name: Restore pytest-ranking cache
      id: restore-pytest-ranking-cache
      if: always()
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/.tox/py312/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ runner.os }}-${{ matrix.python }}
    - name: Run test via Tox
      run: tox --skip-missing-interpreters
      env:
        COVERAGE_XML_PATH: ${{ runner.temp }}
        BABEL_TOX_EXTRA_DEPS: pytest-github-actions-annotate-failures
    - name: Save pytest-ranking cache
      id: save-pytest-ranking-cache
      if: always()
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/.tox/py312/.pytest_cache/v/pytest_ranking_data
        key: pytest-ranking-cache-${{ runner.os }}-${{ matrix.python }}-${{ github.run_id }}
    - uses: codecov/codecov-action@v3
      with:
        directory: ${{ runner.temp }}
  # build:
  #   runs-on: ubuntu-22.04
  #   needs: lint
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #         cache: "pip"
  #         cache-dependency-path: "**/setup.py"
  #     - run: pip install build -e .
  #     - run: make import-cldr
  #     - run: python -m build
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: dist
  #         path: dist
  # publish:
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: release
  #     url: https://pypi.org/p/babel/
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: dist
  #         path: dist/
  #     - name: Publish package distributions to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         verbose: true
  #         print-hash: true
